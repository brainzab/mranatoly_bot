import logging
import random
import re
from aiogram import types
from aiogram.types import ReactionTypeEmoji
from app.services.ai import AiHandler
from app.services.instagram import InstagramHandler
from app.database.models import ChatHistory
from app.config import (
    TARGET_USER_ID, TARGET_CHAT_ID, RESPONSES_SOSAL, 
    RARE_RESPONSE_SOSAL, RESPONSE_LETAL, RESPONSES_SCAMIL, TARGET_REACTION,
    REACTION_ENABLED, REACTION_TARGET_USER_ID, ADMIN_CHAT_ID
)
from app.services.monitoring import monitoring, monitor_function

logger = logging.getLogger(__name__)

class MessageHandlers:
    def __init__(self, bot, db_pool):
        self.bot = bot
        self.db_pool = db_pool
        self.bot_info = None
        self.instagram_handler = InstagramHandler()
    
    async def init_bot_info(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
        if not self.bot_info:
            self.bot_info = await self.bot.get_me()
    
    @monitor_function
    async def handle_message(self, message: types.Message, **kwargs):
        """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            if not message.from_user or not message.text:
                return
            
            await self.init_bot_info()
            
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            monitoring.increment_message(message.chat.id)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            chat_id = message.chat.id
            user_id = message.from_user.id
            message_id = message.message_id
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id} –≤ —á–∞—Ç–µ {chat_id}: {message.text[:50]}...")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if chat_id == TARGET_CHAT_ID:
                await self._save_message_safe(chat_id, user_id, message_id, "user", message.text)
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if REACTION_ENABLED:
                await self._process_reactions(message)
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Instagram Reels
            if await self._process_instagram_reel(message):
                return
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
            if await self._process_template_responses(message):
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –∫ AI
            await self._process_ai_request(message)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            monitoring.log_error(e, {"message": message.text})

    async def _save_message_safe(self, chat_id, user_id, message_id, role, content):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
        try:
            await ChatHistory.save_message(
                self.db_pool, chat_id, user_id, message_id, role, content
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    async def _process_reactions(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if message.from_user.id == REACTION_TARGET_USER_ID and TARGET_REACTION:
            try:
                await self.bot.set_message_reaction(
                    chat_id=message.chat.id,
                    message_id=message.message_id,
                    reaction=[ReactionTypeEmoji(emoji=TARGET_REACTION)]
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    async def _process_instagram_reel(self, message: types.Message) -> bool:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ Instagram Reels"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫—É –Ω–∞ Instagram Reel
            if not re.search(r'instagram\.com/(reel|p|tv)/[A-Za-z0-9_-]+', message.text):
                return False
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
            processing_msg = None
            if message.chat.id != ADMIN_CHAT_ID:
                processing_msg = await self.bot.send_message(
                    chat_id=ADMIN_CHAT_ID,
                    text=f"–°–∫–∞—á–∏–≤–∞—é —Ä–∏–ª –∏–∑ —á–∞—Ç–∞ {message.chat.title or message.chat.id} üé•"
                )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–Ω–∞–ª, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
            await message.chat.do_action(action="upload_video")
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            try:
                video_path = await self.instagram_handler.download_reel(message.text)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                with open(video_path, 'rb') as video:
                    await message.reply_video(
                        video=video,
                        caption="–í–æ—Ç —Ç–≤–æ–π —Ä–∏–ª, –±—Ä–∞—Ç–∏—à–∫–∞! üé•"
                    )
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞
                if processing_msg:
                    await processing_msg.delete()
                
                # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                self.instagram_handler.cleanup(video_path)
                
                return True
                
            except Exception as e:
                error_message = str(e)
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ Instagram Reel: {error_message}")
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                user_message = "–ë–ª—è, –±—Ä–∞—Ç–∏—à–∫–∞, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! üò¢\n"
                
                if "404" in error_message:
                    user_message += "–†–∏–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç."
                elif "login" in error_message.lower() or "–∞–≤—Ç–æ—Ä–∏–∑" in error_message.lower():
                    user_message += "–ù–µ –º–æ–≥—É —Å–∫–∞—á–∞—Ç—å —Ä–∏–ª –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è."
                elif "not found" in error_message.lower() or "–Ω–µ –Ω–∞–π–¥–µ–Ω" in error_message.lower():
                    user_message += "–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —É–¥–∞–ª—ë–Ω."
                elif "connection" in error_message.lower():
                    user_message += "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Instagram. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
                elif "timeout" in error_message.lower():
                    user_message += "–ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç Instagram. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
                else:
                    user_message += "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–∑–∂–µ."
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.reply(user_message)
                
                # –°–æ–æ–±—â–∞–µ–º –æ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö –æ—à–∏–±–∫–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
                if processing_msg:
                    await processing_msg.edit_text(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–∏–ª–∞: {error_message[:200]}")
                elif message.chat.id != ADMIN_CHAT_ID:
                    await self.bot.send_message(
                        chat_id=ADMIN_CHAT_ID,
                        text=f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–∏–ª–∞ –∏–∑ —á–∞—Ç–∞ {message.chat.title or message.chat.id}: {error_message[:200]}"
                    )
                
                return True
            
        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Instagram Reel: {e}")
            await message.reply("–ë–ª—è, –±—Ä–∞—Ç–∏—à–∫–∞, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏! üò¢")
            return True

    async def _process_template_responses(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        message_text = message.text.lower()
        
        if message_text in ['—Å–æ—Å–∞–ª?', 'sosal?']:
            response = RARE_RESPONSE_SOSAL if random.random() < 0.1 else random.choice(RESPONSES_SOSAL)
            sent_message = await message.reply(response)
            if message.chat.id == TARGET_CHAT_ID:
                await self._save_message_safe(message.chat.id, self.bot_info.id, sent_message.message_id, "assistant", response)
            return True
            
        elif message_text == '–ª–µ—Ç–∞–ª?':
            sent_message = await message.reply(RESPONSE_LETAL)
            if message.chat.id == TARGET_CHAT_ID:
                await self._save_message_safe(message.chat.id, self.bot_info.id, sent_message.message_id, "assistant", RESPONSE_LETAL)
            return True
            
        elif message_text == '—Å–∫–∞–º–∏–ª?':
            response = random.choice(RESPONSES_SCAMIL)
            sent_message = await message.reply(response)
            if message.chat.id == TARGET_CHAT_ID:
                await self._save_message_safe(message.chat.id, self.bot_info.id, sent_message.message_id, "assistant", response)
            return True
            
        return False

    async def _process_ai_request(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ AI"""
        message_text = message.text.lower()
        bot_username = f"@{self.bot_info.username.lower()}"
        bot_id = self.bot_info.id
        
        is_reply_to_bot = (message.reply_to_message and 
                          message.reply_to_message.from_user and 
                          message.reply_to_message.from_user.id == bot_id)
        is_tagged = bot_username in message_text
        
        if not (is_tagged or is_reply_to_bot):
            return
        
        query = message_text.replace(bot_username, "").strip() if is_tagged else message_text
        if not query:
            sent_message = await message.reply("–ò —Ö—É–ª–µ —Ç—ã –º–Ω–µ –ø–∏—à–µ—à—å –ø—É—Å—Ç–æ—Ç—É, –ø–µ—Ç—É—à–∞—Ä–∞?")
            if message.chat.id == TARGET_CHAT_ID:
                await self._save_message_safe(message.chat.id, bot_id, sent_message.message_id, "assistant", "–ò —Ö—É–ª–µ —Ç—ã –º–Ω–µ –ø–∏—à–µ—à—å –ø—É—Å—Ç–æ—Ç—É, –ø–µ—Ç—É—à–∞—Ä–∞?")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        chat_history = await ChatHistory.get_chat_history(self.db_pool, message.chat.id)
        
        # –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
        if is_reply_to_bot and message.reply_to_message.text:
            chat_history.append({"role": "assistant", "content": message.reply_to_message.text})
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ AI-–∑–∞–ø—Ä–æ—Å–æ–≤
        monitoring.increment_ai_request(message.chat.id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ AI
        ai_response = await AiHandler.get_ai_response(chat_history, query)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        sent_message = await message.reply(ai_response, parse_mode="Markdown")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        if message.chat.id == TARGET_CHAT_ID:
            await self._save_message_safe(message.chat.id, bot_id, sent_message.message_id, "assistant", ai_response)